{"version":3,"sources":["webpack://english-for-kids/./src/ts/data.ts","webpack://english-for-kids/./src/ts/state/categories_ui_state.ts","webpack://english-for-kids/./src/ts/ui/utils.ts","webpack://english-for-kids/./src/ts/ui/burger_menu_ui.ts","webpack://english-for-kids/./src/ts/state/cards_state.ts","webpack://english-for-kids/./src/ts/state/game_state.ts","webpack://english-for-kids/./src/ts/engine/randomizer.ts","webpack://english-for-kids/./src/ts/engine/game.ts","webpack://english-for-kids/./src/ts/engine/storage.ts","webpack://english-for-kids/./src/ts/ui/fail_ui.ts","webpack://english-for-kids/./src/ts/ui/progress_ui.ts","webpack://english-for-kids/./src/ts/ui/repeat_btn_ui.ts","webpack://english-for-kids/./src/ts/ui/start_game_btn_ui.ts","webpack://english-for-kids/./src/ts/ui/success_ui.ts","webpack://english-for-kids/./src/ts/ui/play_ui.ts","webpack://english-for-kids/./src/ts/ui/play_card_ui.ts","webpack://english-for-kids/./src/ts/ui/train_ui.ts","webpack://english-for-kids/./src/ts/ui/train_card_ui.ts","webpack://english-for-kids/./src/ts/ui/categories_ui.ts","webpack://english-for-kids/./src/ts/ui/category_card_ui.ts","webpack://english-for-kids/./src/ts/ui/statistics_ui.ts","webpack://english-for-kids/./src/ts/ui/menu_ui.ts","webpack://english-for-kids/./src/ts/index.ts","webpack://english-for-kids/./src/ts/ui/toggle_ui.ts","webpack://english-for-kids/./src/ts/ui/blockout_ui.ts"],"names":["categories","cards","word","translation","image","audioSrc","element","createElement","props","document","type","attributes","eventListener","callback","addEventListener","Object","assign","createContentElement","children","append","replaceChildren","parentClass","parent","querySelector","innerHTML","makeMenuItemActive","category","menuItems","querySelectorAll","activeMenuItem","find","classList","contains","targetMenuItem","textContent","remove","add","playAudio","src","audio","play","menuAction","menuUI","blockoutUI","burgerMenuElement","Array","from","forEach","body","setTimeout","cardsState","set","restart","gameState","isStarted","currentIndex","undefined","arr","result","slice","i","length","j","Math","floor","random","playCardAudio","ms","card","storeCard","localStorage","getItem","cardObject","JSON","parse","trained","correct","incorrect","percentage","parseFloat","toFixed","setItem","stringify","propsCopy","getCards","cardObjects","reduce","res","categoryIndex","map","index","storedCard","getDifficultCards","eightCard","filter","sort","a","b","some","failElement","className","alt","wrongCount","addStar","isColored","progressElement","starElement","prepend","repeatBtnElement","onClick","startGameBtnElement","successElement","playCards","playElement","progressUI","playCardElement","parentClassName","split","img","imgSrc","title","event","currentPlayCard","currentTarget","cardTitle","target","startGame","trainCards","trainElement","trainCardElement","content","translatedTitle","onMouseLeave","currentElement","closest","categoryElement","cardElement","toggleTitleElement","columnNames","resetColumnNames","name","includes","statisticsUI","statisticsElement","difficultCard","clear","currentTitle","sortedCards","key","toLowerCase","sortCardsDesc","indexOf","sortCardsAsc","values","value","createMenuItem","child","categoriesElement","idx","keys","blockout","toggleElement","label","parentElement","checked","for","href","menuElement","blockoutElement","burgerMenuUI"],"mappings":"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","file":"bundle.js","sourcesContent":["const correctAudioSrc = './src/assets/data/audio/correct.mp3';\n\nconst errorAudioSrc = './src/assets/data/audio/error.mp3';\n\nconst failureAudioSrc = './src/assets/data/audio/failure.mp3';\n\nconst successAudioSrc = './src/assets/data/audio/success.mp3';\n\nconst categories: string[] = ['Action (set A)', 'Action (set B)', 'Animal (set A)', 'Animal (set B)', 'Clothes', 'Emotions', 'City', 'Health'];\n\nconst cards: { word: string, translation: string, image: string, audioSrc: string }[][] = [\n    [\n        {\n            word: 'cry',\n            translation: 'плакать',\n            image: './src/assets/data/img/cry.jpg',\n            audioSrc: './src/assets/data/audio/cry.mp3',\n        },\n        {\n            word: 'dance',\n            translation: 'танцевать',\n            image: './src/assets/data/img/dance.jpg',\n            audioSrc: './src/assets/data/audio/dance.mp3',\n        },\n        {\n            word: 'dive',\n            translation: 'нырять',\n            image: './src/assets/data/img/dive.jpg',\n            audioSrc: './src/assets/data/audio/dive.mp3',\n        },\n        {\n            word: 'draw',\n            translation: 'рисовать',\n            image: './src/assets/data/img/draw.jpg',\n            audioSrc: './src/assets/data/audio/draw.mp3',\n        },\n        {\n            word: 'fish',\n            translation: 'ловить рыбу',\n            image: './src/assets/data/img/fish.jpg',\n            audioSrc: './src/assets/data/audio/fish.mp3',\n        },\n        {\n            word: 'fly',\n            translation: 'летать',\n            image: './src/assets/data/img/fly.jpg',\n            audioSrc: './src/assets/data/audio/fly.mp3',\n        },\n        {\n            word: 'hug',\n            translation: 'обнимать',\n            image: './src/assets/data/img/hug.jpg',\n            audioSrc: './src/assets/data/audio/hug.mp3',\n        },\n        {\n            word: 'jump',\n            translation: 'прыгать',\n            image: './src/assets/data/img/jump.jpg',\n            audioSrc: './src/assets/data/audio/jump.mp3',\n        },\n    ],\n    [\n        {\n            word: 'open',\n            translation: 'открывать',\n            image: './src/assets/data/img/open.jpg',\n            audioSrc: './src/assets/data/audio/open.mp3',\n        },\n        {\n            word: 'play',\n            translation: 'играть',\n            image: './src/assets/data/img/play.jpg',\n            audioSrc: './src/assets/data/audio/play.mp3',\n        },\n        {\n            word: 'point',\n            translation: 'указывать',\n            image: './src/assets/data/img/point.jpg',\n            audioSrc: './src/assets/data/audio/point.mp3',\n        },\n        {\n            word: 'ride',\n            translation: 'ездить',\n            image: './src/assets/data/img/ride.jpg',\n            audioSrc: './src/assets/data/audio/ride.mp3',\n        },\n        {\n            word: 'run',\n            translation: 'бегать',\n            image: './src/assets/data/img/run.jpg',\n            audioSrc: './src/assets/data/audio/run.mp3',\n        },\n        {\n            word: 'sing',\n            translation: 'петь',\n            image: './src/assets/data/img/sing.jpg',\n            audioSrc: './src/assets/data/audio/sing.mp3',\n        },\n        {\n            word: 'skip',\n            translation: 'пропускать, прыгать',\n            image: './src/assets/data/img/skip.jpg',\n            audioSrc: './src/assets/data/audio/skip.mp3',\n        },\n        {\n            word: 'swim',\n            translation: 'плавать',\n            image: './src/assets/data/img/swim.jpg',\n            audioSrc: './src/assets/data/audio/swim.mp3',\n        },\n    ],\n    [\n        {\n            word: 'cat',\n            translation: 'кот',\n            image: './src/assets/data/img/cat.jpg',\n            audioSrc: './src/assets/data/audio/cat.mp3',\n        },\n        {\n            word: 'chick',\n            translation: 'цыплёнок',\n            image: './src/assets/data/img/chick.jpg',\n            audioSrc: './src/assets/data/audio/chick.mp3',\n        },\n        {\n            word: 'chicken',\n            translation: 'курица',\n            image: './src/assets/data/img/chicken.jpg',\n            audioSrc: './src/assets/data/audio/chicken.mp3',\n        },\n        {\n            word: 'dog',\n            translation: 'собака',\n            image: './src/assets/data/img/dog.jpg',\n            audioSrc: './src/assets/data/audio/dog.mp3',\n        },\n        {\n            word: 'horse',\n            translation: 'лошадь',\n            image: './src/assets/data/img/horse.jpg',\n            audioSrc: './src/assets/data/audio/horse.mp3',\n        },\n        {\n            word: 'pig',\n            translation: 'свинья',\n            image: './src/assets/data/img/pig.jpg',\n            audioSrc: './src/assets/data/audio/pig.mp3',\n        },\n        {\n            word: 'rabbit',\n            translation: 'кролик',\n            image: './src/assets/data/img/rabbit.jpg',\n            audioSrc: './src/assets/data/audio/rabbit.mp3',\n        },\n        {\n            word: 'sheep',\n            translation: 'овца',\n            image: './src/assets/data/img/sheep.jpg',\n            audioSrc: './src/assets/data/audio/sheep.mp3',\n        },\n    ],\n    [\n        {\n            word: 'bird',\n            translation: 'птица',\n            image: './src/assets/data/img/bird.jpg',\n            audioSrc: './src/assets/data/audio/bird.mp3',\n        },\n        {\n            word: 'fish',\n            translation: 'рыба',\n            image: './src/assets/data/img/fish1.jpg',\n            audioSrc: './src/assets/data/audio/fish.mp3',\n        },\n        {\n            word: 'frog',\n            translation: 'жаба',\n            image: './src/assets/data/img/frog.jpg',\n            audioSrc: './src/assets/data/audio/frog.mp3',\n        },\n        {\n            word: 'giraffe',\n            translation: 'жирафа',\n            image: './src/assets/data/img/giraffe.jpg',\n            audioSrc: './src/assets/data/audio/giraffe.mp3',\n        },\n        {\n            word: 'lion',\n            translation: 'лев',\n            image: './src/assets/data/img/lion.jpg',\n            audioSrc: './src/assets/data/audio/lion.mp3',\n        },\n        {\n            word: 'mouse',\n            translation: 'мышь',\n            image: './src/assets/data/img/mouse.jpg',\n            audioSrc: './src/assets/data/audio/mouse.mp3',\n        },\n        {\n            word: 'turtle',\n            translation: 'черепаха',\n            image: './src/assets/data/img/turtle.jpg',\n            audioSrc: './src/assets/data/audio/turtle.mp3',\n        },\n        {\n            word: 'dolphin',\n            translation: 'дельфин',\n            image: './src/assets/data/img/dolphin.jpg',\n            audioSrc: './src/assets/data/audio/dolphin.mp3',\n        },\n    ],\n    [\n        {\n            word: 'skirt',\n            translation: 'юбка',\n            image: './src/assets/data/img/skirt.jpg',\n            audioSrc: './src/assets/data/audio/skirt.mp3',\n        },\n        {\n            word: 'pants',\n            translation: 'брюки',\n            image: './src/assets/data/img/pants.jpg',\n            audioSrc: './src/assets/data/audio/pants.mp3',\n        },\n        {\n            word: 'blouse',\n            translation: 'блузка',\n            image: './src/assets/data/img/blouse.jpg',\n            audioSrc: './src/assets/data/audio/blouse.mp3',\n        },\n        {\n            word: 'dress',\n            translation: 'платье',\n            image: './src/assets/data/img/dress.jpg',\n            audioSrc: './src/assets/data/audio/dress.mp3',\n        },\n        {\n            word: 'boot',\n            translation: 'ботинок',\n            image: './src/assets/data/img/boot.jpg',\n            audioSrc: './src/assets/data/audio/boot.mp3',\n        },\n        {\n            word: 'shirt',\n            translation: 'рубашка',\n            image: './src/assets/data/img/shirt.jpg',\n            audioSrc: './src/assets/data/audio/shirt.mp3',\n        },\n        {\n            word: 'coat',\n            translation: 'пальто',\n            image: './src/assets/data/img/coat.jpg',\n            audioSrc: './src/assets/data/audio/coat.mp3',\n        },\n        {\n            word: 'shoe',\n            translation: 'туфли',\n            image: './src/assets/data/img/shoe.jpg',\n            audioSrc: './src/assets/data/audio/shoe.mp3',\n        },\n    ],\n    [\n        {\n            word: 'sad',\n            translation: 'грустный',\n            image: './src/assets/data/img/sad.jpg',\n            audioSrc: './src/assets/data/audio/sad.mp3',\n        },\n        {\n            word: 'angry',\n            translation: 'сердитый',\n            image: './src/assets/data/img/angry.jpg',\n            audioSrc: './src/assets/data/audio/angry.mp3',\n        },\n        {\n            word: 'happy',\n            translation: 'счастливый',\n            image: './src/assets/data/img/happy.jpg',\n            audioSrc: './src/assets/data/audio/happy.mp3',\n        },\n        {\n            word: 'tired',\n            translation: 'уставший',\n            image: './src/assets/data/img/tired.jpg',\n            audioSrc: './src/assets/data/audio/tired.mp3',\n        },\n        {\n            word: 'surprised',\n            translation: 'удивлённый',\n            image: './src/assets/data/img/surprised.jpg',\n            audioSrc: './src/assets/data/audio/surprised.mp3',\n        },\n        {\n            word: 'scared',\n            translation: 'испуганный',\n            image: './src/assets/data/img/scared.jpg',\n            audioSrc: './src/assets/data/audio/scared.mp3',\n        },\n        {\n            word: 'smile',\n            translation: 'улыбка',\n            image: './src/assets/data/img/smile.jpg',\n            audioSrc: './src/assets/data/audio/smile.mp3',\n        },\n        {\n            word: 'laugh',\n            translation: 'смех',\n            image: './src/assets/data/img/laugh.jpg',\n            audioSrc: './src/assets/data/audio/laugh.mp3',\n        },\n    ],\n    [\n        {\n            word: 'hotel',\n            translation: 'отель',\n            image: './src/assets/data/img/hotel.jpg',\n            audioSrc: './src/assets/data/audio/hotel.mp3',\n        },\n        {\n            word: 'railway station',\n            translation: 'железнодорожная станция',\n            image: './src/assets/data/img/railway_station.jpg',\n            audioSrc: './src/assets/data/audio/railway_station.mp3',\n        },\n        {\n            word: 'traffic light',\n            translation: 'светофор',\n            image: './src/assets/data/img/traffic_light.jpg',\n            audioSrc: './src/assets/data/audio/traffic_light.mp3',\n        },\n        {\n            word: 'hospital',\n            translation: 'больница',\n            image: './src/assets/data/img/hospital.jpg',\n            audioSrc: './src/assets/data/audio/hospital.mp3',\n        },\n        {\n            word: 'cinema',\n            translation: 'кинотеатр',\n            image: './src/assets/data/img/cinema.jpg',\n            audioSrc: './src/assets/data/audio/cinema.mp3',\n        },\n        {\n            word: 'airport',\n            translation: 'аэропорт',\n            image: './src/assets/data/img/airport.jpg',\n            audioSrc: './src/assets/data/audio/airport.mp3',\n        },\n        {\n            word: 'school',\n            translation: 'школа',\n            image: './src/assets/data/img/school.jpg',\n            audioSrc: './src/assets/data/audio/school.mp3',\n        },\n        {\n            word: 'factory',\n            translation: 'завод',\n            image: './src/assets/data/img/factory.jpg',\n            audioSrc: './src/assets/data/audio/factory.mp3',\n        },\n    ],\n    [\n        {\n            word: 'allergy',\n            translation: 'аллергия',\n            image: './src/assets/data/img/allergy.jpg',\n            audioSrc: './src/assets/data/audio/allergy.mp3',\n        },\n        {\n            word: 'doctor',\n            translation: 'доктор',\n            image: './src/assets/data/img/doctor.jpg',\n            audioSrc: './src/assets/data/audio/doctor.mp3',\n        },\n        {\n            word: 'ill',\n            translation: 'больной',\n            image: './src/assets/data/img/ill.jpg',\n            audioSrc: './src/assets/data/audio/ill.mp3',\n        },\n        {\n            word: 'pill',\n            translation: 'таблетка',\n            image: './src/assets/data/img/pills.jpg',\n            audioSrc: './src/assets/data/audio/pills.mp3',\n        },\n        {\n            word: 'nurse',\n            translation: 'медсестра',\n            image: './src/assets/data/img/nurse.jpg',\n            audioSrc: './src/assets/data/audio/nurse.mp3',\n        },\n        {\n            word: 'pulse',\n            translation: 'пульс',\n            image: './src/assets/data/img/pulse.jpg',\n            audioSrc: './src/assets/data/audio/pulse.mp3',\n        },\n        {\n            word: 'braces',\n            translation: 'брекеты',\n            image: './src/assets/data/img/braces.jpg',\n            audioSrc: './src/assets/data/audio/braces.mp3',\n        },\n        {\n            word: 'thermometer',\n            translation: 'градусник',\n            image: './src/assets/data/img/thermometer.jpg',\n            audioSrc: './src/assets/data/audio/thermometer.mp3',\n        },\n    ],\n];\n\nexport {\n    correctAudioSrc,\n    errorAudioSrc,\n    failureAudioSrc,\n    successAudioSrc,\n    cards,\n    categories,\n};\n","const categoriesUIState: {element: HTMLElement | null} = {\n    element: null,\n};\n\nexport default categoriesUIState;\n","import { IContentElement, IElement } from '../interfaces';\n\nconst addEventListener = (element: HTMLElement, props: IElement | IContentElement): void => {\n    const { attributes } = props;\n    if (attributes.eventListener) {\n        const [type, callback] = attributes.eventListener;\n        if (type === 'click') element.addEventListener(type, callback);\n        delete attributes.eventListener;\n    }\n};\n\nconst createElement = (props: IElement): HTMLElement => {\n    const element = document.createElement(props.type);\n    addEventListener(element, props);\n    Object.assign(element, props.attributes);\n    return element;\n};\n\nconst createContentElement = (props: IContentElement): HTMLElement => {\n    const element = document.createElement(props.type);\n    Object.assign(element, props.attributes);\n    if (props.children) {\n        element.append(\n            ...props.children,\n        );\n    }\n    return element;\n};\n\nconst replaceChildren = (parentClass: string, children: HTMLElement[]): void => {\n    const parent = document.querySelector(parentClass);\n    if (!parent) return;\n    parent.innerHTML = '';\n    parent.append(\n        ...children,\n    );\n};\n\nconst makeMenuItemActive = (category: string): void => {\n    const menuItems = [...document.querySelectorAll('.menu__list-item-link')];\n    const activeMenuItem = menuItems.find((element) => element.classList.contains('menu__list-item-link_active'));\n    const targetMenuItem = menuItems.find((element) => element.textContent === category);\n    activeMenuItem?.classList.remove('menu__list-item-link_active');\n    targetMenuItem?.classList.add('menu__list-item-link_active');\n};\n\nconst playAudio = (src: string): void => {\n    const audio = document.createElement('audio');\n    audio.src = src;\n    audio.play();\n};\n\nexport {\n    createElement,\n    createContentElement,\n    replaceChildren,\n    makeMenuItemActive,\n    playAudio,\n};\n","import { createElement } from './utils';\n\nexport const menuAction = () => {\n    const menuUI = document.querySelector('.menu');\n    const blockoutUI = document.querySelector('.blockout');\n    const burgerMenuElement = document.querySelector('.burger-menu');\n    if (!menuUI || !blockoutUI || !burgerMenuElement) return;\n    const children = Array.from(burgerMenuElement.children);\n    if (!menuUI?.classList.contains('menu_show')) {\n        document.body.classList.add('stop-scrolling');\n        menuUI?.classList.add('menu_show');\n        setTimeout(() => {\n            burgerMenuElement.classList.add('burger-menu_white');\n            children.forEach((element) => element.classList.add('burger-menu__line_white'));\n            blockoutUI?.classList.add('blockout_show');\n        }, 500);\n    } else {\n        menuUI?.classList.remove('menu_show');\n        blockoutUI?.classList.remove('blockout_show');\n        burgerMenuElement.classList.remove('burger-menu_white');\n        children.forEach((element) => element.classList.remove('burger-menu__line_white'));\n        document.body.classList.remove('stop-scrolling');\n    }\n};\n\nconst burgerMenuUI = (): HTMLElement => {\n    const burgerMenuElement = document.createElement('div');\n    burgerMenuElement.className = 'burger-menu';\n    burgerMenuElement.append(\n        ...Array.from(Array(3).keys()).map(() => createElement({\n            type: 'span',\n            attributes: {\n                className: `${burgerMenuElement.className}__line`,\n            },\n        })),\n    );\n    let blockout = false;\n    burgerMenuElement.addEventListener('click', () => {\n        if (!blockout) {\n            menuAction();\n            blockout = true;\n            setTimeout(() => {\n                blockout = false;\n            }, 500);\n        }\n    });\n    return burgerMenuElement;\n};\n\nexport default burgerMenuUI;\n","import { ICard, ICardsState } from '../interfaces';\n\nconst cardsState: ICardsState = {\n    category: '',\n    cards: [],\n    set: (props: { category?: string, cards?: ICard[] }): void => {\n        cardsState.category = props.category || cardsState.category;\n        cardsState.cards = props.cards || cardsState.cards;\n    },\n    restart: (): void => {\n        cardsState.category = '';\n        cardsState.cards = [];\n    },\n};\n\nexport default cardsState;\n","import { IGameState, ICard } from '../interfaces';\n\nconst gameState: IGameState = {\n    isStarted: false,\n    currentIndex: 0,\n    cards: [],\n    set: (props: {\n        isStarted?: boolean,\n        currentIndex?: number,\n        cards?: { wrongCount: number, card: ICard }[]\n    }): void => {\n        if (props.isStarted !== undefined) gameState.isStarted = props.isStarted;\n        if (props.currentIndex !== undefined) gameState.currentIndex = props.currentIndex;\n        if (props.cards !== undefined) gameState.cards = props.cards;\n    },\n    restart: () => {\n        gameState.isStarted = false;\n        gameState.currentIndex = 0;\n        gameState.cards = [];\n    },\n};\n\nexport default gameState;\n","import { ICard } from '../interfaces';\n\nconst randomizer = (arr: ICard[]): ICard[] => {\n    const result: ICard[] = arr.slice();\n    for (let i: number = result.length - 1; i > 0; i -= 1) {\n        const j: number = Math.floor(Math.random() * (i + 1));\n        [result[i], result[j]] = [result[j], result[i]];\n    }\n    return result;\n};\n\nexport default randomizer;\n","import { correctAudioSrc, errorAudioSrc } from '../data';\nimport { ICard } from '../interfaces';\nimport gameState from '../state/game_state';\nimport { playAudio } from '../ui/utils';\nimport randomizer from './randomizer';\n\nconst startGame = (cards: ICard[]): void => {\n    gameState.set({\n        isStarted: true,\n        currentIndex: 0,\n        cards: randomizer(cards).map((card) => ({ wrongCount: 0, card })),\n    });\n};\n\nconst playCardAudio = (ms: number = 0): void => {\n    setTimeout(() => {\n        if (gameState.cards[gameState.currentIndex] === undefined) return;\n        playAudio(gameState.cards[gameState.currentIndex].card.audioSrc);\n    }, ms);\n};\n\nconst correctClick = (): void => {\n    gameState.currentIndex += 1;\n    playAudio(correctAudioSrc);\n};\n\nconst wrongClick = (): void => {\n    if (gameState.cards[gameState.currentIndex] === undefined) return;\n    const currentCard = gameState.cards[gameState.currentIndex];\n    currentCard.wrongCount += 1;\n    playAudio(errorAudioSrc);\n};\n\nconst isGameOver = (): boolean => {\n    if (gameState.cards.length === 0) return false;\n    return gameState.currentIndex >= gameState.cards.length;\n};\n\nconst isSuccess = (): boolean => gameState.cards.reduce((res, element) => {\n    const add = res + element.wrongCount;\n    return add;\n}, 0) === 0;\n\nconst isCorrectClick = (cardTitle: string): boolean => {\n    if (gameState.cards[gameState.currentIndex] === undefined) return false;\n    const currentCard = gameState.cards[gameState.currentIndex];\n    return currentCard.card.word === cardTitle;\n};\n\nexport {\n    startGame,\n    isGameOver,\n    isCorrectClick,\n    playCardAudio,\n    correctClick,\n    wrongClick,\n    isSuccess,\n};\n","import { cards, categories } from '../data';\nimport { ICard, ICardStorage } from '../interfaces';\n\nconst storeCard = (props: ICardStorage): void => {\n    const card = localStorage.getItem(props.word);\n    if (card) {\n        const cardObject: ICardStorage = JSON.parse(card);\n        cardObject.trained += props.trained;\n        cardObject.correct += props.correct;\n        cardObject.incorrect += props.incorrect;\n        if (cardObject.correct > 0 || cardObject.incorrect > 0) {\n            const percentage = (\n                (100 / (cardObject.correct + cardObject.incorrect)) * cardObject.incorrect\n            );\n            cardObject.percentage = parseFloat(percentage.toFixed(2));\n        }\n        localStorage.setItem(props.word, JSON.stringify(cardObject));\n    } else {\n        const propsCopy = { ...props };\n        if (propsCopy.correct > 0 || propsCopy.incorrect > 0) {\n            const percentage = (\n                (100 / (propsCopy.correct + propsCopy.incorrect)) * propsCopy.incorrect\n            );\n            propsCopy.percentage = parseFloat(percentage.toFixed(2));\n        }\n        localStorage.setItem(props.word, JSON.stringify(propsCopy));\n    }\n};\n\nconst getCards = (): ICardStorage[] => {\n    const cardObjects: ICard[] = cards.reduce((res, card) => [...res, ...card], []);\n    let categoryIndex = 0;\n    return cardObjects.map((card, index) => {\n        if (index !== 0 && index % 8 === 0) categoryIndex += 1;\n        const storedCard = localStorage.getItem(card.word);\n        if (storedCard) {\n            return {\n                category: categories[categoryIndex],\n                ...JSON.parse(storedCard),\n            };\n        }\n        return {\n            category: categories[categoryIndex],\n            word: card.word,\n            translation: card.translation,\n            trained: 0,\n            correct: 0,\n            incorrect: 0,\n            percentage: 0,\n        };\n    });\n};\n\nconst getDifficultCards = (): ICard[] => {\n    const cardObjects: ICard[] = cards.reduce((res, card) => [...res, ...card], []);\n    const storedCards = getCards().filter((card) => card.percentage > 0).sort((a, b): number => {\n        if (a.percentage > b.percentage) {\n            return -1;\n        }\n        if (a.percentage < b.percentage) {\n            return 1;\n        }\n        return 0;\n    });\n    const eightCard = storedCards.slice(0, 8);\n    return cardObjects.filter((card) => eightCard.some((element) => element.word === card.word));\n};\n\nexport {\n    storeCard,\n    getCards,\n    getDifficultCards,\n};\n","import { failureAudioSrc } from '../data';\nimport cardsState from '../state/cards_state';\nimport categoriesUIState from '../state/categories_ui_state';\nimport gameState from '../state/game_state';\nimport { createElement, playAudio, replaceChildren } from './utils';\n\nconst failUI = (): HTMLElement => {\n    const failElement = document.createElement('div');\n    failElement.className = 'fail';\n    failElement.append(\n        createElement({\n            type: 'img',\n            attributes: {\n                className: `${failElement.className}__img`,\n                src: './src/assets/data/img/pepe_crying.png',\n                alt: 'fail',\n            },\n        }),\n        createElement({\n            type: 'h2',\n            attributes: {\n                className: `${failElement.className}__message`,\n                textContent: `${gameState.cards.reduce((res, element) => res + element.wrongCount, 0)} incorrect answers`,\n            },\n        }),\n    );\n    playAudio(failureAudioSrc);\n    setTimeout(() => {\n        if (categoriesUIState.element) {\n            replaceChildren('.main', [\n                categoriesUIState.element,\n            ]);\n            cardsState.restart();\n            gameState.restart();\n        }\n    }, 5000);\n    return failElement;\n};\n\nexport default failUI;\n","const progressUI = (): HTMLElement => {\n    const progressElement = document.createElement('div');\n    progressElement.className = 'progress';\n    return progressElement;\n};\n\nconst addStar = (isColored: boolean): void => {\n    const progressElement = document.querySelector('.progress');\n\n    if (progressElement) {\n        const starElement = document.createElement('img');\n        starElement.className = 'progress__star';\n        if (isColored) {\n            starElement.src = './src/assets/data/img/star-win.svg';\n            starElement.alt = 'colored star';\n        } else {\n            starElement.src = './src/assets/data/img/star.svg';\n            starElement.alt = 'uncoloder star';\n        }\n        progressElement.prepend(\n            starElement,\n        );\n    }\n};\n\nexport {\n    progressUI,\n    addStar,\n};\n","import { IRepeatBtnUI } from '../interfaces';\n\nconst repeatBtnUI = (props: IRepeatBtnUI) => {\n    const repeatBtnElement = document.createElement('button');\n    repeatBtnElement.className = props.className;\n    repeatBtnElement.textContent = 'Repeat word';\n    repeatBtnElement.addEventListener('click', props.onClick);\n    return repeatBtnElement;\n};\n\nexport default repeatBtnUI;\n","import { IStartGameBtnUI } from '../interfaces';\n\nconst startGameBtnUI = (props: IStartGameBtnUI) => {\n    const startGameBtnElement = document.createElement('button');\n    startGameBtnElement.className = props.className;\n    startGameBtnElement.textContent = 'Start game';\n    startGameBtnElement.addEventListener('click', props.onClick);\n    return startGameBtnElement;\n};\n\nexport default startGameBtnUI;\n","import { successAudioSrc } from '../data';\nimport cardsState from '../state/cards_state';\nimport categoriesUIState from '../state/categories_ui_state';\nimport gameState from '../state/game_state';\nimport { createElement, playAudio, replaceChildren } from './utils';\n\nconst successUI = (): HTMLElement => {\n    const successElement = document.createElement('div');\n    successElement.className = 'success';\n    successElement.append(\n        createElement({\n            type: 'img',\n            attributes: {\n                className: `${successElement.className}__img`,\n                src: './src/assets/data/img/pepe_happy.png',\n                alt: 'success',\n            },\n        }),\n    );\n    playAudio(successAudioSrc);\n    setTimeout(() => {\n        if (categoriesUIState.element) {\n            replaceChildren('.main', [\n                categoriesUIState.element,\n            ]);\n            cardsState.restart();\n            gameState.restart();\n        }\n    }, 3000);\n    return successElement;\n};\n\nexport default successUI;\n","import {\n    correctClick,\n    isCorrectClick,\n    isGameOver,\n    isSuccess,\n    playCardAudio,\n    startGame,\n    wrongClick,\n} from '../engine/game';\nimport { storeCard } from '../engine/storage';\nimport { IPlay } from '../interfaces';\nimport cardsState from '../state/cards_state';\nimport gameState from '../state/game_state';\nimport failUI from './fail_ui';\nimport playCardUI from './play_card_ui';\nimport { addStar, progressUI } from './progress_ui';\nimport repeatBtnUI from './repeat_btn_ui';\nimport startGameBtnUI from './start_game_btn_ui';\nimport successUI from './success_ui';\nimport { createContentElement, makeMenuItemActive, replaceChildren } from './utils';\n\nconst playUI = (playCards: IPlay[]): HTMLElement => {\n    const playElement = document.createElement('div');\n    playElement.className = 'play';\n    playElement.append(\n        progressUI(),\n        createContentElement({\n            type: 'div',\n            attributes: { className: `${playElement.className}__card-container` },\n            children: playCards.map((card) => playCardUI({\n                className: `${playElement.className}__card`,\n                img: { src: card.imgSrc, alt: card.title },\n                onClick: (event) => {\n                    const currentPlayCard = (event.currentTarget as HTMLElement);\n                    if (!gameState.isStarted || currentPlayCard.classList.contains('card_correct')) return;\n                    if (isCorrectClick(card.title)) {\n                        currentPlayCard.classList.add('card_correct');\n                        correctClick();\n                        playCardAudio(1000);\n                        addStar(true);\n                    } else {\n                        wrongClick();\n                        addStar(false);\n                    }\n\n                    if (isGameOver()) {\n                        gameState.cards.forEach((element) => storeCard({\n                            word: element.card.word,\n                            translation: element.card.translation,\n                            trained: 0,\n                            correct: 1,\n                            incorrect: element.wrongCount,\n                            percentage: 0,\n                        }));\n                        if (isSuccess()) {\n                            replaceChildren('.main', [\n                                successUI(),\n                            ]);\n                        } else {\n                            replaceChildren('.main', [\n                                failUI(),\n                            ]);\n                        }\n                        makeMenuItemActive('Main page');\n                    }\n                },\n            })),\n        }),\n        createContentElement({\n            type: 'div',\n            attributes: { className: `${playElement.className}__btn-container` },\n            children: [\n                startGameBtnUI({\n                    className: `${playElement.className}__start-game-btn`,\n                    onClick: (event) => {\n                        const startGameBtnElement = event.target as HTMLElement;\n                        const repeatBtnElement = document.querySelector(`.${playElement.className}__repeat-btn`);\n                        if (!repeatBtnElement) return;\n                        startGame(cardsState.cards);\n                        playCardAudio();\n                        startGameBtnElement.classList.add('hide_btn');\n                        repeatBtnElement.classList.add('show_btn');\n                    },\n                }),\n                repeatBtnUI({\n                    className: `${playElement.className}__repeat-btn`,\n                    onClick: () => {\n                        playCardAudio();\n                    },\n                }),\n            ],\n        }),\n    );\n    return playElement;\n};\n\nexport default playUI;\n","import { IPlayCardUI } from '../interfaces';\nimport { createElement } from './utils';\n\nconst playCardUI = (props: IPlayCardUI): HTMLElement => {\n    const playCardElement = document.createElement('div');\n    playCardElement.className = props.className;\n    const parentClassName = props.className.split('__')[0];\n    playCardElement.append(\n        createElement({\n            type: 'img',\n            attributes: {\n                className: `${parentClassName}__card-img`,\n                src: props.img.src,\n                alt: props.img.alt,\n            },\n        }),\n    );\n    playCardElement.addEventListener('click', props.onClick);\n    return playCardElement;\n};\n\nexport default playCardUI;\n","import { storeCard } from '../engine/storage';\nimport { ITrain } from '../interfaces';\nimport trainCardUI from './train_card_ui';\nimport { playAudio } from './utils';\n\nconst trainUI = (trainCards: ITrain[]): HTMLElement => {\n    const trainElement = document.createElement('div');\n    trainElement.className = 'train';\n    trainElement.append(\n        ...trainCards.map((element) => trainCardUI({\n            className: `${trainElement.className}__card`,\n            content: { title: element.title, translatedTitle: element.translatedTitle },\n            img: { src: element.imgSrc, alt: element.title },\n            audio: { src: element.audioSrc },\n            onClick: (event) => {\n                const currentElement = event.target as HTMLElement;\n                if (currentElement.classList.contains('train__card-rotate')\n                || currentElement.closest('.card_rotate') !== null) return;\n                playAudio(element.audioSrc);\n                storeCard({\n                    word: element.title,\n                    translation: element.translatedTitle,\n                    trained: 1,\n                    correct: 0,\n                    incorrect: 0,\n                    percentage: 0,\n                });\n            },\n            onMouseLeave: (event) => {\n                const currentCard = event.target as HTMLElement;\n                currentCard.classList.remove('card_rotate');\n            },\n        })),\n    );\n    return trainElement;\n};\n\nexport default trainUI;\n","import { ITrainCardUI } from '../interfaces';\nimport { createContentElement, createElement } from './utils';\n\nconst trainCardUI = (props: ITrainCardUI): HTMLElement => {\n    const trainCardElement = document.createElement('div');\n    trainCardElement.className = props.className;\n    const parentClassName = props.className.split('__')[0];\n    trainCardElement.append(\n        createContentElement({\n            type: 'div',\n            attributes: { className: `${parentClassName}__card-front` },\n            children: [\n                createContentElement({\n                    type: 'div',\n                    attributes: { className: `${parentClassName}__card-content` },\n                    children: [\n                        createElement({\n                            type: 'h2',\n                            attributes: { className: `${parentClassName}__card-title`, textContent: props.content.title },\n                        }),\n                        createElement({\n                            type: 'button',\n                            attributes: {\n                                className: `${parentClassName}__card-rotate`,\n                                eventListener: ['click', () => {\n                                    trainCardElement.classList.add('card_rotate');\n                                }],\n                            },\n                        }),\n                    ],\n                }),\n                createElement({\n                    type: 'img',\n                    attributes: { className: `${parentClassName}__card-img`, src: props.img.src, alt: props.img.alt },\n                }),\n            ],\n        }),\n        createContentElement({\n            type: 'div',\n            attributes: { className: `${parentClassName}__card-back` },\n            children: [\n                createContentElement({\n                    type: 'div',\n                    attributes: { className: `${parentClassName}__card-content` },\n                    children: [\n                        createElement({\n                            type: 'h2',\n                            attributes: { className: `${parentClassName}__card-title`, textContent: props.content.translatedTitle },\n                        }),\n                    ],\n                }),\n                createElement({\n                    type: 'img',\n                    attributes: { className: `${parentClassName}__card-img`, src: props.img.src, alt: props.img.alt },\n                }),\n            ],\n        }),\n    );\n    trainCardElement.addEventListener('click', props.onClick);\n    trainCardElement.addEventListener('mouseleave', props.onMouseLeave);\n    return trainCardElement;\n};\n\nexport default trainCardUI;\n","import cardsState from '../state/cards_state';\nimport { ICategory } from '../interfaces';\nimport categoryCardUI from './category_card_ui';\nimport playUI from './play_ui';\nimport trainUI from './train_ui';\nimport { makeMenuItemActive, replaceChildren } from './utils';\n\nconst categoriesUI = (categories: ICategory[]): HTMLElement => {\n    const categoryElement = document.createElement('div');\n    categoryElement.className = 'category';\n    categoryElement.append(\n        ...categories.map((category) => categoryCardUI({\n            className: `${categoryElement.className}__card`,\n            content: {\n                title: category.title,\n            },\n            img: {\n                src: category.cards[0].image,\n                alt: category.title,\n            },\n            onClick: () => {\n                const toggleTitleElement = document.querySelector('.toggle__title');\n                if (toggleTitleElement?.textContent === 'Play') {\n                    replaceChildren('.main', [\n                        playUI(category.cards.map((card) => ({\n                            title: card.word,\n                            imgSrc: card.image,\n                        }))),\n                    ]);\n                } else {\n                    replaceChildren('.main', [\n                        trainUI(category.cards.map((card) => ({\n                            title: card.word,\n                            translatedTitle: card.translation,\n                            imgSrc: card.image,\n                            audioSrc: card.audioSrc,\n                        }))),\n                    ]);\n                }\n                makeMenuItemActive(category.title);\n                cardsState.set({ category: category.title, cards: category.cards });\n            },\n        })),\n    );\n    return categoryElement;\n};\n\nexport default categoriesUI;\n","import { ICategoryCardUI } from '../interfaces';\nimport { createContentElement, createElement } from './utils';\n\nconst categoryCardUI = (props: ICategoryCardUI): HTMLElement => {\n    const cardElement = document.createElement('div');\n    cardElement.className = props.className;\n    const parentClassName = props.className.split('__')[0];\n    cardElement.append(\n        createContentElement({\n            type: 'div',\n            attributes: { className: `${parentClassName}__card-content` },\n            children: [\n                createElement({\n                    type: 'h2',\n                    attributes: { className: `${parentClassName}__card-title`, textContent: props.content.title },\n                }),\n            ],\n        }),\n        createElement({\n            type: 'img',\n            attributes: { className: `${parentClassName}__card-img`, src: props.img.src, alt: props.img.alt },\n        }),\n    );\n    cardElement.addEventListener('click', props.onClick);\n    return cardElement;\n};\n\nexport default categoryCardUI;\n","import { getCards, getDifficultCards } from '../engine/storage';\nimport { ICardStorage } from '../interfaces';\nimport cardsState from '../state/cards_state';\nimport gameState from '../state/game_state';\nimport playUI from './play_ui';\nimport trainUI from './train_ui';\nimport { createContentElement, createElement, replaceChildren } from './utils';\n\nconst columnNames = ['Category', 'Word', 'Translation', 'Trained', 'Correct', 'Incorrect', 'Percentage'];\n\nexport const resetColumnNames = (): void => {\n    columnNames.forEach((name, index) => {\n        if (name.includes('▲') || name.includes('▼')) {\n            columnNames[index] = name.slice(0, name.length - 1);\n        }\n    });\n};\n\nconst sortCardsAsc = (cards: ICardStorage[], key: string) => cards.sort(\n    (a: any, b: any): number => {\n        if (a[key.toLowerCase()] > b[key.toLowerCase()]) {\n            return 1;\n        }\n        if (a[key.toLowerCase()] < b[key.toLowerCase()]) {\n            return -1;\n        }\n        return 0;\n    },\n);\n\nconst sortCardsDesc = (cards: ICardStorage[], key: string) => cards.sort(\n    (a: any, b: any): number => {\n        if (a[key.toLowerCase()] > b[key.toLowerCase()]) {\n            return -1;\n        }\n        if (a[key.toLowerCase()] < b[key.toLowerCase()]) {\n            return 1;\n        }\n        return 0;\n    },\n);\n\nconst statisticsUI = (cards: ICardStorage[]): HTMLElement => {\n    const statisticsElement = document.createElement('div');\n    statisticsElement.className = 'statistics';\n    statisticsElement.append(\n        createContentElement({\n            type: 'div',\n            attributes: {\n                className: `${statisticsElement.className}__btns`,\n            },\n            children: [\n                createElement({\n                    type: 'button',\n                    attributes: {\n                        className: `${statisticsElement.className}__train-difficult-btn`,\n                        textContent: 'Train difficult',\n                        eventListener: ['click', () => {\n                            const toggleTitleElement = document.querySelector('.toggle__title');\n                            const difficultCard = getDifficultCards();\n                            if (toggleTitleElement?.textContent === 'Play') {\n                                replaceChildren('.main', [\n                                    playUI(difficultCard.map((card) => ({\n                                        title: card.word,\n                                        imgSrc: card.image,\n                                    }))),\n                                ]);\n                            } else {\n                                replaceChildren('.main', [\n                                    trainUI(difficultCard.map((card) => ({\n                                        title: card.word,\n                                        translatedTitle: card.translation,\n                                        imgSrc: card.image,\n                                        audioSrc: card.audioSrc,\n                                    }))),\n                                ]);\n                            }\n                            cardsState.set({ category: 'Train difficult', cards: difficultCard });\n                            gameState.restart();\n                        }],\n                    },\n                }),\n                createElement({\n                    type: 'button',\n                    attributes: {\n                        className: `${statisticsElement.className}__reset-btn`,\n                        textContent: 'Reset',\n                        eventListener: ['click', () => {\n                            localStorage.clear();\n                            replaceChildren('.main', [\n                                statisticsUI(getCards()),\n                            ]);\n                        }],\n                    },\n                }),\n            ],\n        }),\n        createContentElement({\n            type: 'div',\n            attributes: {\n                className: `${statisticsElement.className}__table-container`,\n            },\n            children: [\n                createContentElement({\n                    type: 'table',\n                    attributes: {\n                        className: `${statisticsElement.className}__table`,\n                    },\n                    children: [\n                        createContentElement({\n                            type: 'tr',\n                            attributes: {\n                                className: `${statisticsElement.className}__titles`,\n                            },\n                            children: columnNames.map((name) => createElement({\n                                type: 'th',\n                                attributes: {\n                                    className: `${statisticsElement.className}__item`,\n                                    textContent: name,\n                                    eventListener: ['click', (event) => {\n                                        const currentTitle = (\n                                            event.currentTarget as HTMLElement\n                                        ).textContent;\n                                        if (!currentTitle) return;\n                                        if (columnNames.some((element) => element !== currentTitle && (element.includes('▲') || element.includes('▼')))) {\n                                            resetColumnNames();\n                                        }\n                                        let sortedCards = [];\n                                        if (!currentTitle.includes('▲') && !currentTitle.includes('▼')) {\n                                            sortedCards = sortCardsAsc(cards, currentTitle);\n                                            columnNames[columnNames.indexOf(currentTitle)] = `${currentTitle}▲`;\n                                        } else if (currentTitle.includes('▲')) {\n                                            sortedCards = sortCardsDesc(cards, currentTitle.slice(\n                                                0, currentTitle.length - 1,\n                                            ));\n                                            columnNames[columnNames.indexOf(currentTitle)] = `${currentTitle.slice(0, currentTitle.length - 1)}▼`;\n                                        } else {\n                                            sortedCards = getCards();\n                                            columnNames[\n                                                columnNames.indexOf(currentTitle)\n                                            ] = currentTitle.slice(\n                                                0, currentTitle.length - 1,\n                                            );\n                                        }\n                                        replaceChildren('.main', [\n                                            statisticsUI(sortedCards),\n                                        ]);\n                                    }],\n                                },\n                            })),\n                        }),\n                        ...cards.map((card) => createContentElement({\n                            type: 'tr',\n                            attributes: {\n                                className: `${statisticsElement.className}__word`,\n                            },\n                            children: Object.values(card).map((value) => createElement({\n                                type: 'td',\n                                attributes: {\n                                    className: `${statisticsElement.className}__item`,\n                                    textContent: value,\n                                },\n                            })),\n                        })),\n                    ],\n                }),\n            ],\n        }),\n    );\n    return statisticsElement;\n};\n\nexport default statisticsUI;\n","import { getCards } from '../engine/storage';\nimport { ICategory, IContentElement, IElement } from '../interfaces';\nimport cardsState from '../state/cards_state';\nimport gameState from '../state/game_state';\nimport { menuAction } from './burger_menu_ui';\nimport categoriesUI from './categories_ui';\nimport playUI from './play_ui';\nimport statisticsUI, { resetColumnNames } from './statistics_ui';\nimport trainUI from './train_ui';\nimport {\n    createContentElement,\n    createElement,\n    makeMenuItemActive,\n    replaceChildren,\n} from './utils';\n\nconst createMenuItem = (content: IContentElement,\n    child: IElement): HTMLElement => createContentElement({\n    type: content.type,\n    attributes: { className: content.attributes.className },\n    children: [\n        createElement({\n            type: child.type,\n            attributes: {\n                className: child.attributes.className,\n                textContent: child.attributes.textContent,\n                eventListener: child.attributes.eventListener,\n            },\n        }),\n    ],\n});\n\nconst menuUI = (categories: ICategory[]): HTMLElement => {\n    const menuElement = document.createElement('div');\n    menuElement.className = 'menu';\n    menuElement.append(\n        createContentElement({\n            type: 'ul',\n            attributes: {\n                className: `${menuElement.className}__list`,\n            },\n            children: [\n                createMenuItem({\n                    type: 'li',\n                    attributes: { className: `${menuElement.className}__list-item` },\n                },\n                {\n                    type: 'span',\n                    attributes: {\n                        className: `${menuElement.className}__list-item-link menu__list-item-link_active`,\n                        textContent: 'Main page',\n                        eventListener: ['click', () => {\n                            replaceChildren('.main', [\n                                categoriesUI(categories),\n                            ]);\n                            makeMenuItemActive('Main page');\n                            menuAction();\n                            cardsState.restart();\n                            gameState.restart();\n                        }],\n                    },\n                }),\n                ...categories.map((category) => createMenuItem({\n                    type: 'li',\n                    attributes: { className: `${menuElement.className}__list-item` },\n                },\n                {\n                    type: 'span',\n                    attributes: {\n                        className: `${menuElement.className}__list-item-link`,\n                        textContent: category.title,\n                        eventListener: ['click', () => {\n                            const toggleTitleElement = document.querySelector('.toggle__title');\n                            if (toggleTitleElement?.textContent === 'Play') {\n                                replaceChildren('.main', [\n                                    playUI(category.cards.map((card) => ({\n                                        title: card.word,\n                                        imgSrc: card.image,\n                                    }))),\n                                ]);\n                            } else {\n                                replaceChildren('.main', [\n                                    trainUI(category.cards.map((card) => ({\n                                        title: card.word,\n                                        translatedTitle: card.translation,\n                                        imgSrc: card.image,\n                                        audioSrc: card.audioSrc,\n                                    }))),\n                                ]);\n                            }\n                            makeMenuItemActive(category.title);\n                            menuAction();\n                            cardsState.set({ category: category.title, cards: category.cards });\n                            gameState.restart();\n                        }],\n                    },\n                })),\n                createMenuItem({\n                    type: 'li',\n                    attributes: { className: `${menuElement.className}__list-item` },\n                },\n                {\n                    type: 'span',\n                    attributes: {\n                        className: `${menuElement.className}__list-item-link`,\n                        textContent: 'Statistics',\n                        eventListener: ['click', () => {\n                            resetColumnNames();\n                            replaceChildren('.main', [\n                                statisticsUI(getCards()),\n                            ]);\n                            makeMenuItemActive('Statistics');\n                            menuAction();\n                            cardsState.restart();\n                            gameState.restart();\n                        }],\n                    },\n                }),\n            ],\n        }),\n    );\n    return menuElement;\n};\n\nexport default menuUI;\n","import { categories, cards } from './data';\nimport categoriesUIState from './state/categories_ui_state';\nimport blockoutUI from './ui/blockout_ui';\nimport burgerMenuUI from './ui/burger_menu_ui';\nimport categoriesUI from './ui/categories_ui';\nimport menuUI from './ui/menu_ui';\nimport toggleUI from './ui/toggle_ui';\nimport { createContentElement, createElement } from './ui/utils';\n\nconst categoriesElement = categoriesUI(\n    categories.map((element, idx) => ({ title: element, cards: cards[idx] })),\n);\n\ncategoriesUIState.element = categoriesElement;\n\ndocument.body.append(\n    createContentElement({\n        type: 'header',\n        attributes: {\n            className: 'header',\n        },\n        children: [\n            burgerMenuUI(),\n            toggleUI(),\n        ],\n    }),\n    createContentElement({\n        type: 'main',\n        attributes: {\n            className: 'main',\n        },\n        children: [\n            categoriesElement,\n        ],\n    }),\n    createContentElement({\n        type: 'footer',\n        attributes: {\n            className: 'footer',\n        },\n        children: [\n            createContentElement({\n                type: 'a',\n                attributes: {\n                    className: 'footer__logo',\n                    href: 'https://rs.school/js/',\n                },\n                children: [\n                    createElement({\n                        type: 'img',\n                        attributes: {\n                            className: 'footer__img',\n                            src: './src/assets/icons/rs_school_js.svg',\n                            alt: 'rs school icon',\n                        },\n                    }),\n                ],\n            }),\n            createElement({\n                type: 'a',\n                attributes: {\n                    className: 'footer__author',\n                    href: 'https://github.com/enthusiast17',\n                    textContent: '@enthusiast17, 2020',\n                },\n            }),\n        ],\n    }),\n    menuUI(\n        categories.map((element, idx) => ({ title: element, cards: cards[idx] })),\n    ),\n    blockoutUI(),\n);\n","import cardsState from '../state/cards_state';\nimport gameState from '../state/game_state';\nimport playUI from './play_ui';\nimport trainUI from './train_ui';\nimport { createElement, replaceChildren } from './utils';\n\nconst toggleUI = (): HTMLElement => {\n    const toggleElement = document.createElement('div');\n    toggleElement.className = 'toggle';\n    toggleElement.append(\n        createElement({\n            type: 'input',\n            attributes: {\n                type: 'checkbox',\n                className: `${toggleElement.className}__button`,\n                eventListener: ['click', (event) => {\n                    const label = (event.target as HTMLElement).parentElement?.children[1];\n                    if (label) {\n                        if ((event.target as HTMLInputElement).checked) {\n                            label.textContent = 'Play';\n                            if (document.querySelector('.train') && cardsState.cards && cardsState.cards.length !== 0) {\n                                replaceChildren('.main', [\n                                    playUI(cardsState.cards.map((card) => ({\n                                        title: card.word,\n                                        imgSrc: card.image,\n                                    }))),\n                                ]);\n                            }\n                        } else {\n                            label.textContent = 'Train';\n                            if (document.querySelector('.play') && cardsState.cards && cardsState.cards.length !== 0) {\n                                replaceChildren('.main', [\n                                    trainUI(cardsState.cards.map((card) => ({\n                                        title: card.word,\n                                        translatedTitle: card.translation,\n                                        imgSrc: card.image,\n                                        audioSrc: card.audioSrc,\n                                    }))),\n                                ]);\n                            }\n                            gameState.restart();\n                        }\n                    }\n                }],\n            },\n        }),\n        createElement({\n            type: 'label',\n            attributes: {\n                for: `${toggleElement.className}__button`,\n                className: `${toggleElement.className}__title`,\n                textContent: 'Train',\n            },\n        }),\n    );\n    return toggleElement;\n};\n\nexport default toggleUI;\n","const blockoutUI = (): HTMLElement => {\n    const blockoutElement = document.createElement('div');\n    blockoutElement.className = 'blockout';\n    blockoutElement.addEventListener('click', () => {\n        const menuUI = document.querySelector('.menu');\n        const burgerMenuUI = document.querySelector('.burger-menu');\n        if (!menuUI || !burgerMenuUI) return;\n        const children = Array.from(burgerMenuUI.children);\n        menuUI.classList.remove('menu_show');\n        burgerMenuUI.classList.remove('burger-menu_white');\n        children.forEach((element) => element.classList.remove('burger-menu__line_white'));\n        blockoutElement.classList.remove('blockout_show');\n    });\n    return blockoutElement;\n};\n\nexport default blockoutUI;\n"],"sourceRoot":""}